### prettyfs.psgi
PrettyFS::Client is needed

Jonk + Twiggy + Raw DBI + Config::Tiny

### more smart x-reproxy-url

reproxy-url + callback-url
proxy access callback-url when can't get reproxy-url

### TODO
 * rebalance
 * replication

### ARCHITECTURE
* Jonk + Twiggy + Raw DBI + Config::Tinyな感じの構成がよいのでは
* MogileFSよりもメタデータを多く持ちたい。ただのバイトストリームはあつかいずらいのですよ
* keyが示すファイルがupdateされるとURLが変わるので困る
* reproxy-cacheの場合に限る
* そもそもPerlbalのreproxy-cacheがキャッシュ切れのときにappに引き直しにいかないのが問題
* callback-url的なのを一緒に設定してキャッシュきれてるときはそこにcallbackすればいいんじゃないか

### Tracker Node

* tracker node は、リクエストをうけると、いきているストレージサーバーのホスト名をかえす
* これいらなくね?
* Client Library でみればじゅうぶんなきがする。
* まあなんか、RPC Server みたいなのはあっていいとおもうけど。

### Store Node

* たんに、リクエストをうけたら、それをとにかく保存します。
* たぶん、そのまま KT の REST API におきかえできる。
* たぶん、dav server にさしかえできる。
* つまり、このノードはなんらのインテリジェントなうごきをしてはいけない

### Worker Nodes

#### Replication Worker

queue をみて、なんかレプる

#### Rebalance Worker

これは worker じゃなくてスクリプトでいいかも

#### かんしくん

ノードのいきてるかどうかのかくにんと、容量のかくにんとかして、RDBMS にかく。

### fsck script

レプリケーションきいてるかとか、ノードが本当にデータはいってるかとかみる。

### Deleter -- deletes files from storage nodes (protocol deletes from namespace are immediate)
### Reaper -- re-enqueues files for replication when disks are marked dead

## status
mogilefs は readonly, dead, down, alive

